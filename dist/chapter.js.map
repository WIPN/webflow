{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/chapter.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "import type { CMSList } from '../types/CMSList';\nimport type { Member } from '../types/Member';\n\n/**\n * Populate CMS Data from an external API.\n */\nwindow.fsAttributes = window.fsAttributes || [];\nwindow.fsAttributes.push([\n  'cmsload',\n  async (listInstances: CMSList[]) => {\n    // Get the list instance\n    const [listInstance] = listInstances;\n\n    // Save a copy of the template\n    const [firstItem] = listInstance.items;\n    const itemTemplateElement = firstItem.element;\n\n    // Fetch external data\n    const members = await fetchMembers();\n\n    // Remove existing items\n    listInstance.clearItems();\n\n    // Create the new items\n    const newItems = members.map((member: Member) => createItem(member, itemTemplateElement));\n\n    // Populate the list\n    await listInstance.addItems(newItems);\n  },\n]);\n\n/**\n * Fetches members from MemberStack (using Cloudflare Worker Proxy)\n * @returns An array of {@link Member}.\n */\nconst fetchMembers = async () => {\n  try {\n    // Retrieve the content of the element with `data-element=\"chapter-title\"`\n    const chapterTitleElement = document.querySelector('[data-element=\"chapter-title\"]');\n    const chapterTitle = chapterTitleElement ? chapterTitleElement.textContent : '';\n\n    const query = chapterTitle ? `?chapter=${encodeURIComponent(chapterTitle)}` : '';\n    const response = await fetch(`https://members.helpers.wipn.org/${query}`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\n/**\n * Creates an item from the template element.\n * @param member The member data to create the item from.\n * @param templateElement The template element.\n *\n * @returns A new Collection Item element.\n */\nconst createItem = (member: Member, templateElement: HTMLDivElement) => {\n  // Clone the template element\n  const newItem = templateElement.cloneNode(true) as HTMLDivElement;\n\n  // Query inner elements\n  const image = newItem.querySelector<HTMLImageElement>('[data-element=\"profile-image\"]');\n  const firstName = newItem.querySelector<HTMLSpanElement>('[data-element=\"first-name\"]');\n  const lastName = newItem.querySelector<HTMLSpanElement>('[data-element=\"last-name\"]');\n  const chapter = newItem.querySelector<HTMLParagraphElement>('[data-element=\"chapter\"]');\n  const company = newItem.querySelector<HTMLParagraphElement>('[data-element=\"company\"]');\n\n  // Populate inner elements\n  if (image) image.src = member.profileImage;\n  if (firstName) firstName.textContent = member.firstName;\n  if (lastName) lastName.textContent = member.lastName;\n  if (chapter) {\n    chapter.textContent = 'National Virtual';\n    if (member.chapter) {\n      chapter.textContent = member.chapter;\n    }\n  }\n  if (company) {\n    if (member.company) {\n      company.textContent = member.company;\n    } else {\n      company.style.display = 'none';\n    }\n  }\n\n  return newItem;\n};\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,uBAAY,UAAU,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACM7F,SAAO,eAAe,OAAO,gBAAgB,CAAC;AAC9C,SAAO,aAAa,KAAK;AAAA,IACvB;AAAA,IACA,OAAO,kBAA6B;AAElC,YAAM,CAAC,YAAY,IAAI;AAGvB,YAAM,CAAC,SAAS,IAAI,aAAa;AACjC,YAAM,sBAAsB,UAAU;AAGtC,YAAM,UAAU,MAAM,aAAa;AAGnC,mBAAa,WAAW;AAGxB,YAAM,WAAW,QAAQ,IAAI,CAAC,WAAmB,WAAW,QAAQ,mBAAmB,CAAC;AAGxF,YAAM,aAAa,SAAS,QAAQ;AAAA,IACtC;AAAA,EACF,CAAC;AAMD,MAAM,eAAe,YAAY;AAC/B,QAAI;AAEF,YAAM,sBAAsB,SAAS,cAAc,gCAAgC;AACnF,YAAM,eAAe,sBAAsB,oBAAoB,cAAc;AAE7E,YAAM,QAAQ,eAAe,YAAY,mBAAmB,YAAY,CAAC,KAAK;AAC9E,YAAM,WAAW,MAAM,MAAM,oCAAoC,KAAK,EAAE;AACxE,YAAM,OAAO,MAAM,SAAS,KAAK;AACjC,aAAO;AAAA,IACT,SAAS,OAAO;AACd,aAAO;AAAA,IACT;AAAA,EACF;AASA,MAAM,aAAa,CAAC,QAAgB,oBAAoC;AAEtE,UAAM,UAAU,gBAAgB,UAAU,IAAI;AAG9C,UAAM,QAAQ,QAAQ,cAAgC,gCAAgC;AACtF,UAAM,YAAY,QAAQ,cAA+B,6BAA6B;AACtF,UAAM,WAAW,QAAQ,cAA+B,4BAA4B;AACpF,UAAM,UAAU,QAAQ,cAAoC,0BAA0B;AACtF,UAAM,UAAU,QAAQ,cAAoC,0BAA0B;AAGtF,QAAI;AAAO,YAAM,MAAM,OAAO;AAC9B,QAAI;AAAW,gBAAU,cAAc,OAAO;AAC9C,QAAI;AAAU,eAAS,cAAc,OAAO;AAC5C,QAAI,SAAS;AACX,cAAQ,cAAc;AACtB,UAAI,OAAO,SAAS;AAClB,gBAAQ,cAAc,OAAO;AAAA,MAC/B;AAAA,IACF;AACA,QAAI,SAAS;AACX,UAAI,OAAO,SAAS;AAClB,gBAAQ,cAAc,OAAO;AAAA,MAC/B,OAAO;AACL,gBAAQ,MAAM,UAAU;AAAA,MAC1B;AAAA,IACF;AAEA,WAAO;AAAA,EACT;",
  "names": []
}
