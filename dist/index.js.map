{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "import type { CMSFilters } from '../types/CMSFilters';\n\n/**\n * Populate CMS Data from an external API.\n */\nwindow.fsAttributes = window.fsAttributes || [];\nwindow.fsAttributes.push([\n  'cmsfilter',\n  async (filtersInstances: CMSFilters[]) => {\n    // Get the filters instance\n    const [filtersInstance] = filtersInstances;\n\n    // Get the list instance\n    const { listInstance } = filtersInstance;\n\n    // Save a copy of the template\n    const [firstItem] = listInstance.items;\n    const itemTemplateElement = firstItem.element;\n\n    // Fetch external data\n    const members = await fetchMembers();\n    console.log(members);\n\n    // Remove existing items\n    listInstance.clearItems();\n\n    // Create the new items\n    const newItems = members.map((member) => createItem(member, itemTemplateElement));\n\n    // Populate the list\n    await listInstance.addItems(newItems);\n\n    // Get the template filter\n    const filterTemplateElement =\n      filtersInstance.form.querySelector<HTMLLabelElement>('[data-element=\"filter\"]');\n    if (!filterTemplateElement) return;\n\n    // Get the parent wrapper\n    const filtersWrapper = filterTemplateElement.parentElement;\n    if (!filtersWrapper) return;\n\n    // Remove the template from the DOM\n    filterTemplateElement.remove();\n\n    // Collect the categories\n    const categories = collectCategories(members);\n\n    // Sync the CMSFilters instance with the new created filters\n    // filtersInstance.storeFiltersData();\n  },\n]);\n\n/**\n * Fetches members from MemberStack (using Cloudflare Worker Proxy)\n * @returns An array of {@link Member}.\n */\nconst fetchMembers = async () => {\n  try {\n    const response = await fetch('https://members.helpers.wipn.org/');\n    const data: Member[] = await response.json();\n    return data;\n  } catch (error) {\n    return [];\n  }\n};\n\n/**\n * Creates an item from the template element.\n * @param member The member data to create the item from.\n * @param templateElement The template element.\n *\n * @returns A new Collection Item element.\n */\nconst createItem = (member, templateElement: HTMLDivElement) => {\n  // Clone the template element\n  const newItem = templateElement.cloneNode(true) as HTMLDivElement;\n\n  // Query inner elements\n  const image = newItem.querySelector<HTMLImageElement>('[data-element=\"profile-image\"]');\n  const firstName = newItem.querySelector<HTMLSpanElement>('[data-element=\"first-name\"]');\n  const lastName = newItem.querySelector<HTMLSpanElement>('[data-element=\"last-name\"]');\n  const chapter = newItem.querySelector<HTMLParagraphElement>('[data-element=\"chapter\"]');\n  const company = newItem.querySelector<HTMLParagraphElement>('[data-element=\"company\"]');\n\n  // Populate inner elements\n  if (image) image.src = member.profileImage;\n  if (firstName) firstName.textContent = member.firstName;\n  if (lastName) lastName.textContent = member.lastName;\n  if (chapter) {\n    chapter.textContent = 'National Virtual';\n    if (member.chapter) {\n      chapter.textContent = member.chapter;\n    }\n  }\n  if (company) {\n    if (member.company) {\n      company.textContent = member.company;\n    } else {\n      company.style.display = 'none';\n    }\n  }\n\n  return newItem;\n};"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,uBAAY,UAAU,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACK7F,SAAO,eAAe,OAAO,gBAAgB,CAAC;AAC9C,SAAO,aAAa,KAAK;AAAA,IACvB;AAAA,IACA,OAAO,qBAAmC;AAExC,YAAM,CAAC,eAAe,IAAI;AAG1B,YAAM,EAAE,aAAa,IAAI;AAGzB,YAAM,CAAC,SAAS,IAAI,aAAa;AACjC,YAAM,sBAAsB,UAAU;AAGtC,YAAM,UAAU,MAAM,aAAa;AACnC,cAAQ,IAAI,OAAO;AAGnB,mBAAa,WAAW;AAGxB,YAAM,WAAW,QAAQ,IAAI,CAAC,WAAW,WAAW,QAAQ,mBAAmB,CAAC;AAGhF,YAAM,aAAa,SAAS,QAAQ;AAGpC,YAAM,wBACJ,gBAAgB,KAAK,cAAgC,yBAAyB;AAChF,UAAI,CAAC;AAAuB;AAG5B,YAAM,iBAAiB,sBAAsB;AAC7C,UAAI,CAAC;AAAgB;AAGrB,4BAAsB,OAAO;AAG7B,YAAM,aAAa,kBAAkB,OAAO;AAAA,IAI9C;AAAA,EACF,CAAC;AAMD,MAAM,eAAe,YAAY;AAC/B,QAAI;AACF,YAAM,WAAW,MAAM,MAAM,mCAAmC;AAChE,YAAM,OAAiB,MAAM,SAAS,KAAK;AAC3C,aAAO;AAAA,IACT,SAAS,OAAO;AACd,aAAO,CAAC;AAAA,IACV;AAAA,EACF;AASA,MAAM,aAAa,CAAC,QAAQ,oBAAoC;AAE9D,UAAM,UAAU,gBAAgB,UAAU,IAAI;AAG9C,UAAM,QAAQ,QAAQ,cAAgC,gCAAgC;AACtF,UAAM,YAAY,QAAQ,cAA+B,6BAA6B;AACtF,UAAM,WAAW,QAAQ,cAA+B,4BAA4B;AACpF,UAAM,UAAU,QAAQ,cAAoC,0BAA0B;AACtF,UAAM,UAAU,QAAQ,cAAoC,0BAA0B;AAGtF,QAAI;AAAO,YAAM,MAAM,OAAO;AAC9B,QAAI;AAAW,gBAAU,cAAc,OAAO;AAC9C,QAAI;AAAU,eAAS,cAAc,OAAO;AAC5C,QAAI,SAAS;AACX,cAAQ,cAAc;AACtB,UAAI,OAAO,SAAS;AAClB,gBAAQ,cAAc,OAAO;AAAA,MAC/B;AAAA,IACF;AACA,QAAI,SAAS;AACX,UAAI,OAAO,SAAS;AAClB,gBAAQ,cAAc,OAAO;AAAA,MAC/B,OAAO;AACL,gBAAQ,MAAM,UAAU;AAAA,MAC1B;AAAA,IACF;AAEA,WAAO;AAAA,EACT;",
  "names": []
}
